package com.example.liu.ad_detection;

import android.app.ProgressDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.SharedPreferences;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.*;
import com.example.liu.ad_detection.model.AppInfo;

import java.io.File;
import java.io.FileInputStream;
import java.security.DigestInputStream;
import java.security.MessageDigest;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class ChooseSafeActivity extends AppCompatActivity {
    private static final String TAG = "ChooseSafeActivity";
    private ListView listview;
    private Button buttonCancel;

    private ChooseSafeAdapter adapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.choose_safe_list);
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
        initView();
    }

    private void initView() {
        buttonCancel = (Button)findViewById(R.id.back_choose);
        listview = (ListView)findViewById(R.id.choose_safe_list_view);
        adapter = new ChooseSafeAdapter(ChooseSafeActivity.this,SafeListActivity.totalList);
        listview.setAdapter(adapter);
        buttonCancel.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
        listview.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                new AlertDialog.Builder(ChooseSafeActivity.this).setTitle("是否信任").setPositiveButton("确定", new
                        DialogInterface
                        .OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        AppInfo appInfo = SafeListActivity.totalList.get(position);
                        SharedPreferences.Editor editor = getSharedPreferences("safeList",Context.MODE_PRIVATE).edit();
                        editor.putString(appInfo.getPkgName(),appInfo.getPkgName());
                        editor.apply();
                        runOnUiThread(new Runnable() {
                            @Override
                            public void run() {
                                Toast.makeText(ChooseSafeActivity.this,"已添加至白名单",Toast.LENGTH_SHORT).show();
                            }
                        });
                    }
                }).setNegativeButton("取消", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                    }
                }).show();
            }
        });
    }



    //Applist适配器
    class ChooseSafeAdapter extends BaseAdapter {

        private List<AppInfo> appInfoList = null;

        LayoutInflater infater = null;

        ChooseSafeAdapter(Context context, List<AppInfo> apps) {
            infater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            appInfoList = apps;
        }

        @Override
        public int getCount() {
            System.out.println("size" + appInfoList.size());
            return appInfoList.size();
        }

        @Override
        public Object getItem(int position) {
            return appInfoList.get(position);
        }

        @Override
        public long getItemId(int position) {
            return position;
        }

        @Override
        public View getView(int position, View convertView, ViewGroup parent) {
            View view = null;
            ViewHolder holder = null;
            if (convertView == null || convertView.getTag() == null) {
                view = infater.inflate(R.layout.choose_safe_item,parent,false);
                holder = new ViewHolder(view);
                view.setTag(holder);
            }
            else{
                view = convertView;
                holder = (ViewHolder) convertView.getTag();
            }
            AppInfo appInfo = (AppInfo) getItem(position);
            holder.appIcon.setImageDrawable(appInfo.getAppIcon());
            holder.tvAppLabel.setText(appInfo.getAppLabel());
            holder.tvPkgName.setText(appInfo.getPkgName());
            return view;
        }
    }

    class ViewHolder {
        ImageView appIcon;
        TextView tvAppLabel;
        TextView tvPkgName;

        private ViewHolder(View view) {
            this.appIcon = (ImageView) view.findViewById(R.id.imgApp);
            this.tvAppLabel = (TextView) view.findViewById(R.id.tvAppLabel);
            this.tvPkgName = (TextView) view.findViewById(R.id.tvPkgName);
        }

    }

}
