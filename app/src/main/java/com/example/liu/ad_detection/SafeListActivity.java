package com.example.liu.ad_detection;

import android.app.ProgressDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.*;
import com.example.liu.ad_detection.model.AppInfo;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public class SafeListActivity extends AppCompatActivity {

    Button buttonBack;
    Button buttonChooseSafe;
    public static List<AppInfo> totalList = new ArrayList<>();   //存储所有app
    private List<AppInfo> safeList = new ArrayList<>();
    private ProgressDialog progressDialog;
    private PackageManager pm;              //获取apk信息
    private SafeListAdapter adapter;
    private ListView listView;
    private boolean fistFlag = true;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_safe_list);
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
        initview();
    }

    @Override
    protected void onPostResume() {
        super.onPostResume();
        if (!fistFlag){
            safeList.clear();
            SharedPreferences pref = getSharedPreferences("safeList", Context.MODE_PRIVATE);
            for (Map.Entry<String,?> map:pref.getAll().entrySet()){
                for (AppInfo appInfo:totalList){
                    if (appInfo.getPkgName().equals(map.getKey())){
                        safeList.add(appInfo);
                    }
                }
            }
            adapter.notifyDataSetChanged();
        }
        fistFlag = false;
    }

    // 根据查询条件，查询第三方安装的APP
    public List<AppInfo> queryFilterAppInfo() {
        pm = this.getPackageManager();
        // 查询所有已经安装的应用程序
        List<ApplicationInfo> listAppcations = pm.getInstalledApplications(PackageManager.GET_UNINSTALLED_PACKAGES);
        System.out.println(listAppcations.size());
        Collections.sort(listAppcations, new ApplicationInfo.DisplayNameComparator(pm));// 排序
        List<AppInfo> appInfos = new ArrayList<>(); // 保存过滤查到的AppInfo
        System.out.println(appInfos.size());
        appInfos.clear();
        for (ApplicationInfo app : listAppcations) {
            //非系统程序
            if ((app.flags & ApplicationInfo.FLAG_SYSTEM) <= 0) {
                appInfos.add(getAppInfo(app));
            }
            //本来是系统程序，被用户手动更新后，该系统程序也成为第三方应用程序了
            else if ((app.flags & ApplicationInfo.FLAG_UPDATED_SYSTEM_APP) != 0){
                appInfos.add(getAppInfo(app));
            }
        }
        return appInfos;
    }
    // 构造一个AppInfo对象 ，并赋值
    private AppInfo getAppInfo(ApplicationInfo app) {
        AppInfo appInfo = new AppInfo();
        appInfo.setAppLabel((String) app.loadLabel(pm));
        appInfo.setAppIcon(app.loadIcon(pm));
        appInfo.setPkgName(app.packageName);
        return appInfo;
    }

    private void initview() {
        showProgressDialog();
        buttonBack = (Button)findViewById(R.id.back_to_main);
        buttonBack.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
        buttonChooseSafe = (Button)findViewById(R.id.btn_choose_to_safe);
        buttonChooseSafe.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(SafeListActivity.this,ChooseSafeActivity.class);
                startActivity(intent);
            }
        });

        listView = (ListView)findViewById(R.id.safe_list_view);
        new Thread(new Runnable() {
            @Override
            public void run() {
                totalList = queryFilterAppInfo(); // 查询所有应用程序信息
                SharedPreferences pref = getSharedPreferences("safeList", Context.MODE_PRIVATE);
                for (Map.Entry<String,?> map:pref.getAll().entrySet()){
                    for (AppInfo appInfo:totalList){
                        if (appInfo.getPkgName().equals(map.getKey())){
                            safeList.add(appInfo);
                        }
                    }
                }
                runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        adapter = new SafeListAdapter(SafeListActivity.this,safeList);
                        listView.setAdapter(adapter);
                        closeProgressDialog();
                    }
                });
            }
        }).start();

        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                new AlertDialog.Builder(SafeListActivity.this).setTitle("是否从白名单中移除").setPositiveButton("确定", new
                        DialogInterface
                                .OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                AppInfo appInfo = safeList.get(position);
                                SharedPreferences.Editor editor = getSharedPreferences("safeList",Context.MODE_PRIVATE).edit();
                                editor.remove(appInfo.getPkgName());
                                editor.apply();
                                safeList.remove(position);
                                adapter.notifyDataSetChanged();
                                runOnUiThread(new Runnable() {
                                    @Override
                                    public void run() {
                                        Toast.makeText(SafeListActivity.this,"已从白名单中删除",Toast.LENGTH_SHORT).show();
                                    }
                                });
                            }
                        }).setNegativeButton("取消", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                    }
                }).show();
            }
        });
    }

    //Applist适配器
    class SafeListAdapter extends BaseAdapter {

        private List<AppInfo> appInfoList = null;

        LayoutInflater infater = null;

        SafeListAdapter(Context context, List<AppInfo> apps) {
            infater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            appInfoList = apps;
        }

        @Override
        public int getCount() {
            System.out.println("size" + appInfoList.size());
            return appInfoList.size();
        }

        @Override
        public Object getItem(int position) {
            return appInfoList.get(position);
        }

        @Override
        public long getItemId(int position) {
            return position;
        }

        @Override
        public View getView(int position, View convertView, ViewGroup parent) {
            View view = null;
            ViewHolder holder = null;
            if (convertView == null || convertView.getTag() == null) {
                view = infater.inflate(R.layout.safe_item,parent,false);
                holder = new SafeListActivity.ViewHolder(view);
                view.setTag(holder);
            }
            else{
                view = convertView;
                holder = (ViewHolder) convertView.getTag();
            }
            AppInfo appInfo = (AppInfo) getItem(position);
            holder.appIcon.setImageDrawable(appInfo.getAppIcon());
            holder.tvAppLabel.setText(appInfo.getAppLabel());
            holder.tvPkgName.setText(appInfo.getPkgName());
            return view;
        }
    }

    class ViewHolder {
        ImageView appIcon;
        TextView tvAppLabel;
        TextView tvPkgName;

        private ViewHolder(View view) {
            this.appIcon = (ImageView) view.findViewById(R.id.imgApp);
            this.tvAppLabel = (TextView) view.findViewById(R.id.tvAppLabel);
            this.tvPkgName = (TextView) view.findViewById(R.id.tvPkgName);
        }

    }

    private void showProgressDialog(){
        if (progressDialog == null){
            progressDialog = new ProgressDialog(SafeListActivity.this);
            progressDialog.setMessage("正在加载...");
            progressDialog.setCanceledOnTouchOutside(false);
        }
        progressDialog.show();
    }

    private void closeProgressDialog(){
        if (progressDialog != null){
            progressDialog.dismiss();
        }
    }
}
